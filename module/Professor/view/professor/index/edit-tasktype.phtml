 <?php
 $form = $this->form;
 $form->setAttribute('action', $this->url(
     'tasktype',
     array(
         'action' => 'editTasktype',
         'id'     => $this->id,
     )
 ));
 $form->prepare();
 echo $this->form()->openTag($form);
 echo $this->formHidden($form->get('id'));
?>
<div class="modal-body">
	 <div class="form-group">
	        <?php
	        echo $this->translate($this->formlabel($form->get('task_type_name')));
	        echo $this->formelement($form->get('task_type_name'));
	        echo $this->formElementErrors($form->get('task_type_name'));
// 	        echo $this->formelement($form->get('approval_required')) . " " . $this->translate('GateKeeper Approval Required');
// 	        echo $this->formElementErrors($form->get('approval_required'));
	        ?>
	 </div>
</div>
<div class="modal-footer">
	<?php  echo $this->formelement($form->get('add')); ?>&nbsp;
	<?php  echo $this->formelement($form->get('cancel')->setLabel($this->translate("Cancel")));?>
</div>
<!-- set hidden field for URL -->
<?php $url = $this->url('tasktype', array('action' => 'checkDuplicate',)); ?>
<input type="hidden" id="duplicateURL" value="<?php echo $url ?>">
<!-- hiddden field for URL -->
  
<?php echo $this->form()->closeTag(); ?>

<script type="text/javascript">
$(document).ready(function() {
$('#task_type').formValidation({
	    fields: {
	        task_type_name: {
	            row: '.form-group',
	            validators: {
	                notEmpty: {
	                    message: '<?php echo $this->translate("Task Type name is Required"); ?>'
	                },
                    stringLength: {
                        message: '<?php echo $this->translate("Task Type Name can not be greater than 100 characters"); ?>',
                        max: 100,
                	}
				}
	        },
	    }
	});

$("#submitbutton").on('click', function(e) {
	e.preventDefault();
	var task_type_name = $('#task_type_name').val();
	var urlDup = $("#duplicateURL").val();
	$.ajax({
	  method: "POST",
  	  url: urlDup,
	  data: {tableName: 'task_type', fields: [{task_type_name: task_type_name}], id: <?php echo $this->id; ?>},
	  success: function(data) {
		  if (data == true) {
			  $('#task_type').submit();
		  } else {
			  $("#task_type_name").parent().addClass("has-error");
			  $("#task_type_name").next().html('<?php  echo $this->translate('Task Type Name already exist'); ?>').attr("data-fv-result", "INVALID").show();
			  return false;
		  }
	  }
	});
	});

});
</script>

